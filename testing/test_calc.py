#!/usr/bin/env python# -*- coding: UTF-8 -*-import allureimport pytestimport sysimport yamlsys.path.append('..')from pythonCode.calc import Calculatordef get_datas():    with open("./datas/calc.yml", encoding="utf-8") as f:        mydatas = yaml.safe_load(f)class TestCalc:    # 提取每个方法里都要重复的实例化    def setup_class(self):        print("在整个类之前执行setup")        self.calc = Calculator()    def teardown_class(self):        print("在整个类之后执行teardown")    # 重复方法参数化    @pytest.mark.parametrize('a, b, c', [        (1, 1, 2),        (-1, -1, 1)    ])    @pytest.mark.add    def test_add(self, a, b, c):        # 每个方法里进行实例化        # calc = Calculator()        # 在allure报告中添加一些日志(文本、html) allure.attach（）        allure.attach("这是一个相加的测试用例", name='这是文本型', attachment_type=allure.attachment_type.TEXT)        allure.attach(            '<img src="https://ceshiren.com/uploads/default/original/2X/c/c49051f32076a3903e1a56a0bde6199bddd5f07b.jpeg" width="100%">',            name='html类型', attachment_type=allure.attachment_type.HTML)        # 断言        assert c == self.calc.add(a, b)    @pytest.mark.parametrize('a, b, c', [        (1, 1, 1),        (2, 2, 1)    ])    @pytest.mark.div    def test_div(self, a, b, c):        # 每个方法里进行实例化        # calc = Calculator()        # 在allure报告中添加一些日志(图片、视频) allure.attach.file（）        allure.attach.file('C:\\Users\\Julia\\Pictures\\Camera Roll\\lisa.JPG', name='这是一张图片',                           attachment_type=allure.attachment_type.JPG)        assert c == self.calc.div(a, b)    ## 原始的方法    # def test_add(self):    #     calc = Calculator()    #     assert 2 == calc.add(1, 1)    #    # def test_div(self):    #     calc = Calculator()    #     assert 2 == calc.div(2, 1)